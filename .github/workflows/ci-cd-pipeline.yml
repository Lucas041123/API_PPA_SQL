# .github/workflows/ci-cd-pipeline.yml

name: CI/CD Pipeline - API Plataforma Profissional

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # ===================================================================
  # JOB 1: BUILD E TESTES AUTOMATIZADOS
  # ===================================================================
  build-and-test:
    name: Build, Test e Package
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' 
          distribution: 'temurin'
          cache: 'maven' 

      - name: Tornar o Maven Wrapper executável
        run: chmod +x mvnw

      - name: Build com Maven Wrapper
        run: ./mvnw clean install 

      - name: Upload dos Relatórios de Teste
        if: always() 
        uses: actions/upload-artifact@v4
        with:
          name: relatorios-de-teste
          path: target/surefire-reports/
          
      # Não precisamos salvar o .jar se não vamos fazer deploy
      # Mas vamos manter, caso você queira baixá-lo manualmente
      - name: Upload do Artefato da Aplicação (.jar)
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar 

# ===================================================================
  # JOB 2: ATUALIZAÇÃO DO BANCO DE DADOS ORACLE (MÉTODO MANUAL)
  # ===================================================================
  run-database-migration:
    name: Atualizar Banco de Dados Oracle
    runs-on: ubuntu-latest
    
    needs: build-and-test 
    
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      # 1. Checkout do código (para pegar o script SQL)
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2. Instalar o Java (O SQLcl é uma aplicação Java)
      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' 
          distribution: 'temurin'
          
      # 3. Baixar e instalar o Oracle SQLcl (cliente de banco)
      - name: Download e Instalação do SQLcl
        run: |
          wget https://download.oracle.com/otn_software/java/sqlcl/sqlcl-latest.zip
          unzip sqlcl-latest.zip
          # Adiciona o executável 'sql' ao PATH do runner
          echo "$(pwd)/sqlcl/bin" >> $GITHUB_PATH

      # 4. Executar a Migração do Banco Oracle
      - name: Executar Migração do Banco
        env:
          # Passa os Secrets para o ambiente do script
          ORACLE_USER: ${{ secrets.ORACLE_USER }}
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD }}
          ORACLE_CONNECT_STRING: ${{ secrets.ORACLE_CONNECT_STRING }}
        run: |
          # Executa o script SQL. 
          # O SQLcl pegará os secrets automaticamente.
          sql ${ORACLE_USER}/${ORACLE_PASSWORD}@${ORACLE_CONNECT_STRING} @SQL_PPA_2.sql
